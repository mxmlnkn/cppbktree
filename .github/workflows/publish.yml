name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  Deploy-Wheels:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        archs: [auto64]
        # manylinux1 is not supported anymore because it won't compile C++17 code
        # manylinux2010 runs into this problem https://github.com/pypa/cibuildwheel/issues/1001
        # MacOS and Windows ignore the manylinux-image version because they are not Linux.
        include:
        - os: ubuntu-latest
          manylinux-image: manylinux2014
          archs: auto64
        - os: ubuntu-latest
          manylinux-image: manylinux2014
          archs: auto32
        - os: ubuntu-latest
          manylinux-image: manylinux_2_28
          archs: auto64

    # ------ Begin Copy-Paste of wheels.yml ------
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade-strategy eager --upgrade cython twine cibuildwheel build

    - name: Build Tarball
      # Only one out of the OS matrix needs to build the tarball.
      if: matrix.manylinux-image == 'manylinux2014' && matrix.os == 'ubuntu-latest'
      run: python3 -m build --sdist

    - name: Build Wheels
      env:
        CIBW_ARCHS: ${{ matrix.archs }}
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux-image }}
      run: python -m cibuildwheel --output-dir dist .

    - name: Check Wheels
      run: twine check dist/*
    # ------ End Copy-Paste of wheels.yml ------

    - name: Publish Tarball to PyPI
      env:
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      # Only one out of the OS matrix needs to upload the tarball.
      if: matrix.manylinux-image == 'manylinux2014' && matrix.os == 'ubuntu-latest'
      run: twine upload --skip-existing -u __token__ dist/*

    - name: Publish to PyPI
      env:
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: twine upload --skip-existing -u __token__ dist/*
